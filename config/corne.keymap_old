/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&lt 4 ESCAPE    &lt 3 Q  &kp W  &kp E                   &kp R        &kp T           &kp Y            &kp U        &kp I           &kp O    &kp P                &kp MINUS
&kp LEFT_SHIFT  &kp A    &kp S  &kp D                   &kp F        &kp G           &kp H            &kp J        &kp K           &kp L    &kp SEMICOLON        &mt RSHFT BACKSLASH
&kp LEFT_GUI    &kp Z    &kp X  &kp C                   &kp V        &kp B           &kp N            &kp M        &kp COMMA       &kp DOT  &mt LA(LCTRL) SLASH  &lt 4 SQT
                                &mt LEFT_CONTROL EQUAL  &lt 1 ENTER  &mt LALT TAB    &lt 1 BACKSPACE  &lt 2 SPACE  &mt RALT GRAVE
            >;
        };

        numbers_fs {
            bindings = <
&kp ESCAPE  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &kp N7  &kp N8  &kp N9  &kp MINUS   &kp EQUAL     &kp ESCAPE
&trans      &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &kp N4  &kp N5  &kp N6  &kp SLASH   &kp ASTERISK  &kp BACKSPACE
&trans      &kp F11  &kp F12  &trans  &trans  &trans     &kp N1  &kp N2  &kp N3  &kp PERIOD  &kp EQUAL     &kp ENTER
                              &trans  &trans  &trans     &trans  &kp N0  &trans
            >;
        };

        arrows_multi {
            bindings = <
&kp LA(LEFT_GUI)  &kp LS(LEFT_GUI)  &trans  &trans  &trans  &trans    &kp HOME       &kp END   &kp UP    &kp C_MUTE      &kp C_VOL_DN          &kp C_VOLUME_UP
&trans            &trans            &trans  &trans  &trans  &trans    &kp PAGE_UP    &kp LEFT  &kp DOWN  &kp RIGHT       &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC
&trans            &trans            &trans  &trans  &trans  &trans    &kp PAGE_DOWN  &trans    &trans    &kp C_PREVIOUS  &kp C_PP              &kp C_NEXT
                                            &trans  &trans  &trans    &trans         &trans    &trans
            >;
        };

        coding_symb {
            bindings = <
&kp LS(F6)  &none  &none  &none          &none   &none     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE            &kp RIGHT_BRACE            &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &none  &none  &none          &none   &none     &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans                    &trans                     &kp GRAVE         &kp SQT
&trans      &none  &none  &kp RG(RS(R))  &none   &trans    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RS(RG(LEFT_BRACKET))  &kp RS(RG(RIGHT_BRACKET))  &kp RG(RA(LEFT))  &kp RG(RA(RIGHT))
                          &trans         &trans  &trans    &trans                &trans                 &trans
            >;
        };

        numbers_top {
            bindings = <
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp N7         &kp N8        &kp N9                &kp N0                 &kp EQUAL
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT    &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans        &trans        &trans        &trans         &trans        &trans         &trans        &trans                &trans                 &trans
                                       &trans        &trans        &trans         &trans        &trans         &trans
            >;
        };
    };
};
